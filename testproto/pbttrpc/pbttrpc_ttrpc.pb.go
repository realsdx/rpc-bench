// Code generated by protoc-gen-go-ttrpc. DO NOT EDIT.
// source: testproto/pbttrpc/pbttrpc.proto
package pbttrpc

import (
	context "context"
	ttrpc "github.com/containerd/ttrpc"
)

type GreeterService interface {
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
}

func RegisterGreeterService(srv *ttrpc.Server, svc GreeterService) {
	srv.RegisterService("pbttrpc.Greeter", &ttrpc.ServiceDesc{
		Methods: map[string]ttrpc.Method{
			"SayHello": func(ctx context.Context, unmarshal func(interface{}) error) (interface{}, error) {
				var req HelloRequest
				if err := unmarshal(&req); err != nil {
					return nil, err
				}
				return svc.SayHello(ctx, &req)
			},
		},
	})
}

type greeterClient struct {
	client *ttrpc.Client
}

func NewGreeterClient(client *ttrpc.Client) GreeterService {
	return &greeterClient{
		client: client,
	}
}

func (c *greeterClient) SayHello(ctx context.Context, req *HelloRequest) (*HelloReply, error) {
	var resp HelloReply
	if err := c.client.Call(ctx, "pbttrpc.Greeter", "SayHello", req, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}
